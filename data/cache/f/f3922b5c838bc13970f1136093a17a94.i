a:35:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:39:"http://www.tuicool.com/articles/eiIbYjJ";i:1;N;}i:2;i:1;}i:3;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:40;}i:4;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:40;}i:5;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:154:"Monolog是php下比较全又容易扩展的记录日志组件。目前有包括Symfony 、Laravel、 CakePHP等诸多知名php框架都内置了Monolog。";}i:2;i:42;}i:6;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:196;}i:7;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:196;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:167:"Monolog可以把你的日志发送到文件，sockets，收件箱，数据库和各种web服务器上。一些特殊的组件可以给你带来特殊的日志策略。";}i:2;i:198;}i:9;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:365;}i:10;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:365;}i:11;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:95:"Monolog 是PHP的一个日志类库。相比于其他的日志类库，它有以下的特点：";}i:2;i:367;}i:12;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:463;}i:13;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:463;}i:14;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:463;}i:15;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:463;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:100:" 功能强大。可以把日志发送到文件、socket、邮箱、数据库和各种web services。";}i:2;i:467;}i:17;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:567;}i:18;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:567;}i:19;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:567;}i:20;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:567;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:100:" 遵循 PSR3 的接口规范。可以很轻易的替换成其他遵循同一规范的日志类库。";}i:2;i:571;}i:22;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:671;}i:23;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:671;}i:24;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:671;}i:25;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:671;}i:26;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:138:" 良好的扩展性。通过 Handler 、 Formatter 和 Processor 这几个接口，可以对Monolog类库进行各种扩展和自定义。";}i:2;i:675;}i:27;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:813;}i:28;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:813;}i:29;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:813;}i:30;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:813;}i:31;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:40:"http://laravelacademy.org/post/1878.html";i:1;s:29:"laravel中配置使用monolog";}i:2;i:816;}i:32;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:890;}i:33;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:652:"
Log::emergency($error);     //紧急状况，比如系统挂掉
Log::alert($error);     //需要立即采取行动的问题，比如整站宕掉，数据库异常等，这种状况应该通过短信提醒 
Log::critical($error);     //严重问题，比如：应用组件无效，意料之外的异常
Log::error($error);     //运行时错误，不需要立即处理但需要被记录和监控
Log::warning($error);    //警告但不是错误，比如使用了被废弃的API
Log::notice($error);     //普通但值得注意的事件
Log::info($error);     //感兴趣的事件，比如登录、退出
Log::debug($error);     //详细的调试信息
";i:1;N;i:2;N;}i:2;i:897;}i:34;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:897;}}